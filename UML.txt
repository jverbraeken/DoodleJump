@startuml

package "resources.audio" #DDDDDD {
	interface IAudioManager
	interface IBackgroundMusic
	interface IMusicFactory
	interface ISound
	interface ISoundFactory

	class AudioManager {
	}
	class BackgroundMusic {
	}
	class MusicFactory {
	}
	class Sound {
	}
	class SoundFactory {
	}

	AudioManager ..|> IAudioManager
	BackgroundMusic ..|> IBackgroundMusic
	MusicFactory ..|> IMusicFactory
	Sound ..|> ISound
	SoundFactory ..|> ISoundFactory

	MusicFactory --> BackgroundMusic
	SoundFactory --> Sound
}

package "objects.enemies" #DDDDDD {
	interface IEnemy
	interface IEnemyBuilder

	class Enemy {
	}
	class EnemyBuilder {
	}

	Enemy ..|> IEnemy
	EnemyBuilder ..|> IEnemyBuilder
	EnemyBuilder --> Enemy
}
package "filesystem" #DDDDDD {
	interface IFileSystem
	
	class FileSystem {
	}

	FileSystem ..|> IFileSystem
}
package "input" #DDDDDD {
	interface IInputManager
	
	class InputManager {
	}

	InputManager ..|> IInputManager
}
package "math" #DDDDDD {
	interface ICalc
	
	class Calc {
	}

	Calc ..|> ICalc
}
package "objects" #DDDDDD {
package "blocks" #BBBBBB {
	interface IBlock
	interface IBlockBuilder
	interface IBlockFactory
	interface IPlatform
	interface IPlatformFactory

	class Block {
	}
	class BlockBuilder {
	}
	class BlockFactory {
	}
	class Platform {
	}
	class PlatformFactory {
	}

	Block ..|> IBlock
	BlockBuilder ..|> IBlockBuilder
	BlockFactory ..|> IBlockFactory
	Platform ..|> IPlatform
	PlatformFactory ..|> IPlatformFactory

	BlockFactory --> IBlockBuilder
	BlockBuilder --> IPlatformFactory
	Block --o BlockBuilder
	PlatformFactory --> Platform
}
package "doodles" #BBBBBB {
	interface IDoodle
	interface IDoodleFactory

	class Doodle {
	}
	class DoodleFactory {
	}
	
	Doodle ..|> IDoodle
	DoodleFactory ..|> IDoodleFactory
	DoodleFactory --> Doodle
}
package "powerups" #BBBBBB {
	interface IPowerup
	interface IPowerupFactory

	class Powerup {
	}
	class PowerupFactory {
	}

	Powerup ..|> IPowerup
	PowerupFactory ..|> IPowerupFactory
	
	PowerupFactory --> Powerup
}
}
package "rendering" #DDDDDD {
package "buttons" #BBBBBB {
	interface IButton
	
	class MenuButton {
	}
	class PauseButton {
	}
	
	MenuButton ..|> IButton
	PauseButton ..|> IButton
}
	interface IRenderer

	class Renderer {
	}

	Renderer ..|> IRenderer
}
package "scenes" #DDDDDD {
	interface IScene
	interface ISceneFactory

	class Menu {
	}
	class World {
	}
	class SceneFactory {
	}
	
	Menu ..|> IScene
	World ..|> IScene
	SceneFactory ..|> ISceneFactory
	SceneFactory --> Menu
	SceneFactory --> World
}
package "resources.sprites" #DDDDDD {
	interface ISprite
	interface ISpriteFactory

	class Sprite {
	}
	class SpriteFactory {
	}

	Sprite ..|> ISprite
	SpriteFactory ..|> ISpriteFactory
	SpriteFactory --> Sprite
}

package "system" #DDDDDD {
	interface IServiceLocator
	interface ILevelBuilder
	
	class ServiceLocator {
	}
	class LevelBuilder {
	}
	class Game {
		static void main()
	}

	ServiceLocator ..|> IServiceLocator

	ServiceLocator --> IAudioManager
	ServiceLocator --> IMusicFactory
	ServiceLocator --> ISoundFactory
	ServiceLocator --> IEnemyBuilder
	ServiceLocator --> IFileSystem
	ServiceLocator --> IInputManager
	ServiceLocator --> ICalc
	ServiceLocator --> IBlockFactory
	ServiceLocator --> IDoodleFactory
	ServiceLocator --> IPowerupFactory
	ServiceLocator --> IRenderer
	ServiceLocator --> ISceneFactory
	ServiceLocator --> ISpriteFactory
	ServiceLocator --> ILevelBuilder

	Game --> IServiceLocator
}


@enduml
